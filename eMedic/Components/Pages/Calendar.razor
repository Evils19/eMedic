@page "/orar"
@rendermode InteractiveServer

<PageTitle>Dashboard</PageTitle>

<div class="layout">
    <!-- Top Bar -->
    <div class="container">
                <nav class="navbar">
                    <div class="logo">
                        <i class="fas fa-heartbeat"></i>
                        <span>eMedic</span>
                    </div>
                    <ul class="nav-links">
                        <li><a href="#">Home</a></li>
                        <li><a href="#">Services</a></li>
                        <li><a href="#">Doctors</a></li>
                        <li><a href="#">About</a></li>
                        <li><a href="#">Contact</a></li>
                    </ul>
                    <button class="login-btn">Logout</button>
                </nav>
            </div>
    <!-- Calendar -->
    <div class="calendar">
        <!-- Calendar Header -->
        <div class="time-slot"></div>
        @foreach (var date in Dates)
        {
            <div class="calendar-date">@date.ToString("MMM dd")</div>
        }
    
        <!-- Calendar Body -->
        @foreach (var timeSlot in TimeSlots)
        {
            <div class="time-slot">@timeSlot</div>
            @foreach (var date in Dates)
            {
                <div class="appointment" @onclick="() => ShowPopup(date, timeSlot)">
                    @if (Appointments.TryGetValue((date, timeSlot), out var appointment))
                    {
                        <div class="appointment-item">@appointment</div>
                    }
                </div>
            }
        }
    </div>
    
    <!-- Popup -->
    @if (isPopupVisible)
    {
        <div class="popup-overlay">
            <div class="popup">
                <h3>Appointment Details</h3>
                <p>
                    @selectedIDNP, 
                    <strong>@selectedFullName, </strong>
                    @selectedAge, 
                    @selectedGender, 
                    @selectedPhone, 
                    @selectedEmail, 
                    @selectedAddress, 
                    @selectedDate.ToString("MMM dd"), 
                    @selectedTimeSlot,
                    @selectedAppointment
                </p>
                <br/>
                <strong>Scurt istoric</strong><br/>
                <p>Din datele propuse de catre pacient si informatiile investigate din cartela medicala este o probabilitate
                    mare ca durerea de cap sa fie cauzata prin faptul ca pacientul bea prea multa cafea si are un pic
                    probleme mentale.</p>
                <br/>
                <strong>Motivul adresarii</strong>
                <p>Durere de cap fara o cauza anumita care ar veni in cap.</p>
                <div class="popup-actions">
                    <button class="delete-btn" @onclick="DeleteAppointment">Delete</button>
                    <button class="reappoint-btn" @onclick="ReappointClient">Reappoint</button>
                    <button class="close-btn" @onclick="ClosePopup">Close</button>
                </div>
            </div>
        </div>
    }
</div>

@code {
    
    private List<DateTime> Dates = Enumerable.Range(0, 7).Select(i => DateTime.Today.AddDays(i)).ToList();
    private List<string> TimeSlots = Enumerable.Range(8, 10).Select(i => $"{i}:00 - {i}:30").ToList();
    private Dictionary<(DateTime, string), string> Appointments = new()
    {
        { (DateTime.Today, "8:00 - 8:30"), "Meeting with Dr. Smith" },
        { (DateTime.Today.AddDays(1), "9:00 - 9:30"), "Team Standup" },
        { (DateTime.Today.AddDays(2), "10:00 - 10:30"), "Project Review" }
    };

    private bool isPopupVisible = false;
    private string selectedIDNP = "1234567890123";
    private string selectedFullName = "Tudor Deviza";
    private int selectedAge = 23;
    private string selectedGender = "Masculin";
    private string selectedPhone = "0741234567";
    private string selectedEmail = "tudor.deviza@gmail.com";
    private string selectedAddress = "Str. Studentilor 7/1 Tekwil";
    private string selectedAppointment;
    private DateTime selectedDate = new DateTime(2025, 04, 13);
    private string selectedTimeSlot;

    private void ShowPopup(DateTime date, string timeSlot)
    {
        if (Appointments.TryGetValue((date, timeSlot), out var appointment))
        {
            selectedAppointment = appointment;
            selectedDate = date;
            selectedTimeSlot = timeSlot;
            isPopupVisible = true;
        }
    }

    private void ClosePopup()
    {
        isPopupVisible = false;
    }

    private void DeleteAppointment()
    {
        Appointments.Remove((selectedDate, selectedTimeSlot));
        ClosePopup();
    }

    private void ReappointClient()
    {
        // Logic for reappointment (e.g., open a form or redirect to another page)
        ClosePopup();
    }
}